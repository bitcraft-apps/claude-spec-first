name: Test Installation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-install:
    name: Test Installation Process
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Test framework installation
      run: |
        echo "üöÄ Testing installation process..."
        
        # Make installation script executable
        chmod +x scripts/install.sh
        
        # Create isolated test environment
        export TEST_HOME=$(mktemp -d)
        export HOME=$TEST_HOME
        echo "üìÅ Created test environment: $TEST_HOME"
        
        # Run installation
        echo "üì¶ Running installation..."
        ./scripts/install.sh
        
        echo "‚úÖ Installation completed successfully"
    
    - name: Verify installation results
      run: |
        echo "üîç Verifying installation results..."
        
        # Use the same test environment
        export TEST_HOME=$(mktemp -d)
        export HOME=$TEST_HOME
        ./scripts/install.sh > /dev/null 2>&1  # Silent install for verification
        
        # Verify directory structure
        directories=(".claude" ".claude/agents" ".claude/commands" ".claude/examples")
        for dir in "${directories[@]}"; do
          if [ -d "$HOME/$dir" ]; then
            echo "‚úÖ $dir directory created"
          else
            echo "‚ùå $dir directory missing"
            exit 1
          fi
        done
        
        # Verify file counts
        agent_count=$(find "$HOME/.claude/agents" -name "*.md" | wc -l)
        command_count=$(find "$HOME/.claude/commands" -name "*.md" | wc -l)
        
        [ "$agent_count" -eq 6 ] && echo "‚úÖ All 6 agents installed" || { echo "‚ùå Expected 6 agents, found $agent_count"; exit 1; }
        [ "$command_count" -eq 9 ] && echo "‚úÖ All 9 commands installed" || { echo "‚ùå Expected 9 commands, found $command_count"; exit 1; }
        
        # Verify core files
        core_files=("validate-framework.sh" "CLAUDE.md")
        for file in "${core_files[@]}"; do
          if [ -f "$HOME/.claude/$file" ]; then
            echo "‚úÖ $file installed"
          else
            echo "‚ùå $file not installed"
            exit 1
          fi
        done
        
        # Verify script permissions
        if [ -x "$HOME/.claude/validate-framework.sh" ]; then
          echo "‚úÖ Validation script is executable"
        else
          echo "‚ùå Validation script not executable"
          exit 1
        fi
        
        echo "üéâ All installation verification checks passed!"
        
        # Cleanup
        echo "üßπ Cleaning up test environment..."
        rm -rf "$TEST_HOME"
        echo "‚úÖ Cleanup completed"