name: Test Installation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-install:
    name: Test Installation Process
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Test framework installation
      run: |
        echo "🚀 Testing installation process..."
        
        # Make installation script executable
        chmod +x scripts/install.sh
        
        # Create isolated test environment
        export TEST_HOME=$(mktemp -d)
        export HOME=$TEST_HOME
        echo "📁 Created test environment: $TEST_HOME"
        
        # Run installation
        echo "📦 Running installation..."
        ./scripts/install.sh
        
        echo "✅ Installation completed successfully"
    
    - name: Verify installation results
      run: |
        echo "🔍 Verifying installation results..."
        
        # Use the same test environment
        export TEST_HOME=$(mktemp -d)
        export HOME=$TEST_HOME
        ./scripts/install.sh > /dev/null 2>&1  # Silent install for verification
        
        # Verify directory structure
        directories=(".claude" ".claude/agents" ".claude/commands" ".claude/.csf")
        for dir in "${directories[@]}"; do
          if [ -d "$HOME/$dir" ]; then
            echo "✅ $dir directory created"
          else
            echo "❌ $dir directory missing"
            exit 1
          fi
        done
        
        # Verify file counts (updated for simplified framework with CSF prefix)
        agent_count=$(find "$HOME/.claude/agents/csf" -name "*.md" 2>/dev/null | wc -l)
        command_count=$(find "$HOME/.claude/commands/csf" -name "*.md" 2>/dev/null | wc -l)
        
        [ "$agent_count" -eq 3 ] && echo "✅ All 3 agents installed" || { echo "❌ Expected 3 agents, found $agent_count"; exit 1; }
        [ "$command_count" -eq 4 ] && echo "✅ All 4 commands installed" || { echo "❌ Expected 4 commands, found $command_count"; exit 1; }
        
        # Verify framework metadata files
        metadata_files=(".installed" "VERSION")
        for file in "${metadata_files[@]}"; do
          if [ -f "$HOME/.claude/.csf/$file" ]; then
            echo "✅ $file installed in .csf directory"
          else
            echo "❌ $file not installed in .csf directory"
            exit 1
          fi
        done
        
        echo "🎉 All installation verification checks passed!"
        
        # Cleanup
        echo "🧹 Cleaning up test environment..."
        rm -rf "$TEST_HOME"
        echo "✅ Cleanup completed"